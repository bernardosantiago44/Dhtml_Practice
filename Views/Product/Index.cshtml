@model IEnumerable<Dhtmlx_Practice.Models.Product>
@using System.Text.Json;

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />

<style>
    .gridbox_mterial .xhdr {
        background-color: #2ecc71 !important;
        color: white;
        font-weight: bold;
    }

    .ev_material td {
        background-color: #eafaf1;
        border: 1px solid #d4f4df;
        padding: 8px;
        color: #4f4f4f;
    }

    .odd_material td {
        background-color: white;
        border: 1px solid #e0e0e0;
        padding: 8px;
        color: #4f4f4f;
    }

    .rowselected td, .ev_material.rowselected td, .odd_material.rowselected td {
        background-color: #2ecc71;
        color: white;
        font-weight: bold;
    }

    .page-item.active .page-link {
        background-color: #2ecc71;
        border-color: #2ecc71;
        color: white;
    }

    .page-link:hover {
        background-color: #d4f4df;
        border-color: #2ecc71;
        color: #2e7d50;
        transition: background-color 0.2s, color 0.2s;
    }

    .page-link {
        color: #2f4f4f;
        border: 1px solid #d4f4df;
        margin: 0 2px;
        border-radius: 4px;
    }

    .pagination {
        margin-top: 1.5rem;
    }


    .dhtmlx_grid .obj tr:hover td {
        background-color: #d4f4df;
    }

    #grid_container {
        border: 2px solid #2ecc71;
        border-radius: 5px;
    }
</style>

@{
    ViewData["Title"] = "Products";
    var currentPage = ViewBag.CurrentPage as int? ?? 1;
    var totalPages = ViewBag.TotalPages as int? ?? 1;

    var jsonData = JsonSerializer.Serialize(
        Model.Select(product => new
        {
            id = product.Id,
            description = product.Description,
            price = product.Price
        }),
        new JsonSerializerOptions { PropertyNamingPolicy = null }
    );
}

<div class="container py-4">
    <h1 class="mb-4">@ViewData["Title"]</h1>
    
    <div id="grid_container" style="width: 100%; height: 400px;"></div>

    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="/Product/Index?page=@i">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        var grid;
        document.addEventListener('DOMContentLoaded', function() { 
            constructGrid();
            loadDataToGrid();
        });

        function constructGrid() {
            grid = new dhtmlXGridObject("grid_container");
            grid.setHeader("ID,Description,Price");
            grid.setInitWidths("100,*,100,100");
            grid.setColAlign("center,left,center,center,center");
            grid.setColTypes("ro,ro,ro,ro,ro");
            grid.setColSorting("int,str,float,int,str");

            grid.init();
        }

        function loadDataToGrid() {
            var data = @Html.Raw(Json.Serialize(Model));

            grid.clearAll();
            data.forEach(product => {
                grid.addRow(product.id, [product.id, product.description, product.price]);
            });
        }
        
    </script>
}
